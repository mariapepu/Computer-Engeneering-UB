GUI JOC ABAIX
       private void mostrarVictoria(BufferStrategy strategy) {
        Graphics g = strategy.getDrawGraphics();
        Graphics2D g2 = (Graphics2D)g; 
        dibuixarMarc(g2, Color.GREEN);
        
        Font f = new Font("Dialog", Font.PLAIN, 30);
        if (heroina.count <= 0.0f) {
            g2.setFont(f);
            g2.setColor(Color.white);
            g2.drawString("HAS POGUT TROBAR LES CLAUS A TEMS!!!", 160, 90);
            f = new Font("Dialog", Font.PLAIN, 16);
            g2.setFont(f);
        } 
        f = new Font("Dialog", Font.PLAIN, 16);
        g2.setFont(f);
        g2.drawString("'ESC' Sortir", 180, 180);
    }

ESTE ES EN PRACTICA
        private void distribuirSerp(){
        
        Habitacio h = castell.getHabitacio(0, 2);
        Habitacio q = castell.getHabitacio(1, 2);
        Habitacio r = castell.getHabitacio(2, 2);
        
                    
                   
        Serp m = new Serp("Serp", 
            -50, 700, 0, 40, 42);
        Serp w = new Serp("Serp", 
            -50, 700, 0, 40, 42);
        Serp e = new Serp("Serp", 
            -50, 700, 0, 40, 42);
        Serp o = new Serp("Serp", 
            -50, 700, 0, 40, 42);
        
                    
        int[] posicio = h.getPosicioCela(6,4);
        int[] posicio1 = q.getPosicioCela(13,12);
        int[] posicio2 = r.getPosicioCela(3,15);
        int[] posicio3 = r.getPosicioCela(9,3);
                    
        m.setPosicioInicial(posicio[0], posicio[1]);
        w.setPosicioInicial(posicio1[0], posicio1[1]);
        e.setPosicioInicial(posicio2[0], posicio2[1]);
        o.setPosicioInicial(posicio3[0], posicio3[1]);
                    
        h.addActor(m);
        q.addActor(w);
        r.addActor(e);
        r.addActor(o);

ESTE ES SERP

package edu.ub.juanadearco.actors;

import edu.ub.juanadearco.Actor;
import edu.ub.juanadearco.Colisio;
import edu.ub.juanadearco.Constants;
import edu.ub.juanadearco.Context;
import edu.ub.juanadearco.Util;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Rectangle;

/**
 * El menjar proporciona un increment en el nivell de vida de l'actor que 
 * col·lisiona amb ella.
 * 
 * @author Prog1
 */
public class Serp extends AbstractActor {

    private float calories;
    private Image image;
    private int amplada;
    private int alcada;
    private String nom;

    
    /**
     * Crea un nou objecte del tipus Menjar amb una subimage del fitxer
     * <code>objectes.png</code>, el nom i calories proporcionades. Les calories
     * aporten un guany proporcional en la vida del jugador.
     * 
     * @param nom Nom
     * @param calories guany de vida 
     * @param imgPosX posició x de la subimage
     * @param imgPosY posició y de la subimage
     * @param imgAmplada amplada de la subimage
     * @param imgAlcada alçada de la subimage
     */
    public Serp(String nom, float calories, int imgPosX, int imgPosY, 
            int imgAmplada, int imgAlcada) {
        this.nom = nom;
        this.calories = calories;
        this.image = Util.carregarImatge("objectes.png", 
                imgPosX, imgPosY, imgAmplada, imgAlcada);
        this.amplada = imgAmplada;
        this.alcada = imgAlcada;
        setEstat(Constants.ESTAT_ACTIU);
    }
        
    /**
     * Obté el número de calories d'aquest menjar concret.
     * 
     * @return el número de calories
     */
    public float getCalories() {
        return calories;
    }
    
    /**
     * Assigna el número de calories d'aquest menjar concret.
     */
    public void setCalories(float calories) {
        this.calories = calories;
    }

    public void actualitzar(Context context) {
        // no fem res, es estàtic
    }

    public Rectangle getLimits() {
        return new Rectangle(getX(), getY(), amplada, alcada);
    }

    public void tractarColisio(Colisio colisio) {
        Actor actor = colisio.getActor();
        if (actor instanceof Heroina) {
	        actor.setVida(Math.max(0.0f, actor.getVida() + calories));
	        setEstat(Constants.ESTAT_INACTIU);
        }
    }

    public void render(Graphics2D g) {
        g.drawImage(image, getX(), getY(), observer);
        g.setColor(Color.GREEN);
        Font f = new Font("Dialog", Font.BOLD, 10);
        g.setFont(f);
        g.drawString(nom, getX(), getY() - 3);
    }
           
}

